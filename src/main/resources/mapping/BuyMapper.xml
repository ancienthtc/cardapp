<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jd.cardapp.dao.BuyMapper" >
  <resultMap id="BaseResultMap" type="com.jd.cardapp.model.Buy" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="pay" property="pay" jdbcType="DOUBLE" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="pic1" property="pic1" jdbcType="VARCHAR" />
    <result column="pic2" property="pic2" jdbcType="VARCHAR" />
    <result column="folder1" property="folder1" jdbcType="VARCHAR" />
    <result column="folder2" property="folder2" jdbcType="VARCHAR" />
    <result column="card" property="card" jdbcType="INTEGER" />
    <result column="graphic" property="graphic" jdbcType="INTEGER" />
    <result column="user" property="user" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, state, type, pay, detail, pic1, pic2, folder1, folder2, card, graphic, user,
    createtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jd.cardapp.model.BuyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_buy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_buy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_buy
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jd.cardapp.model.BuyExample" >
    delete from t_buy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jd.cardapp.model.Buy" >
    insert into t_buy (id, state, type,
      pay, detail, pic1, pic2,
      folder1, folder2, card,
      graphic, user, createtime
      )
    values (#{id,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{type,jdbcType=INTEGER},
      #{pay,jdbcType=DOUBLE}, #{detail,jdbcType=VARCHAR}, #{pic1,jdbcType=VARCHAR}, #{pic2,jdbcType=VARCHAR},
      #{folder1,jdbcType=VARCHAR}, #{folder2,jdbcType=VARCHAR}, #{card,jdbcType=INTEGER},
      #{graphic,jdbcType=INTEGER}, #{user,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jd.cardapp.model.Buy" >
    insert into t_buy
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="pay != null" >
        pay,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="pic1 != null" >
        pic1,
      </if>
      <if test="pic2 != null" >
        pic2,
      </if>
      <if test="folder1 != null" >
        folder1,
      </if>
      <if test="folder2 != null" >
        folder2,
      </if>
      <if test="card != null" >
        card,
      </if>
      <if test="graphic != null" >
        graphic,
      </if>
      <if test="user != null" >
        user,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="pay != null" >
        #{pay,jdbcType=DOUBLE},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="pic1 != null" >
        #{pic1,jdbcType=VARCHAR},
      </if>
      <if test="pic2 != null" >
        #{pic2,jdbcType=VARCHAR},
      </if>
      <if test="folder1 != null" >
        #{folder1,jdbcType=VARCHAR},
      </if>
      <if test="folder2 != null" >
        #{folder2,jdbcType=VARCHAR},
      </if>
      <if test="card != null" >
        #{card,jdbcType=INTEGER},
      </if>
      <if test="graphic != null" >
        #{graphic,jdbcType=INTEGER},
      </if>
      <if test="user != null" >
        #{user,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jd.cardapp.model.BuyExample" resultType="java.lang.Integer" >
    select count(*) from t_buy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_buy
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.pay != null" >
        pay = #{record.pay,jdbcType=DOUBLE},
      </if>
      <if test="record.detail != null" >
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.pic1 != null" >
        pic1 = #{record.pic1,jdbcType=VARCHAR},
      </if>
      <if test="record.pic2 != null" >
        pic2 = #{record.pic2,jdbcType=VARCHAR},
      </if>
      <if test="record.folder1 != null" >
        folder1 = #{record.folder1,jdbcType=VARCHAR},
      </if>
      <if test="record.folder2 != null" >
        folder2 = #{record.folder2,jdbcType=VARCHAR},
      </if>
      <if test="record.card != null" >
        card = #{record.card,jdbcType=INTEGER},
      </if>
      <if test="record.graphic != null" >
        graphic = #{record.graphic,jdbcType=INTEGER},
      </if>
      <if test="record.user != null" >
        user = #{record.user,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_buy
    set id = #{record.id,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      pay = #{record.pay,jdbcType=DOUBLE},
      detail = #{record.detail,jdbcType=VARCHAR},
      pic1 = #{record.pic1,jdbcType=VARCHAR},
      pic2 = #{record.pic2,jdbcType=VARCHAR},
      folder1 = #{record.folder1,jdbcType=VARCHAR},
      folder2 = #{record.folder2,jdbcType=VARCHAR},
      card = #{record.card,jdbcType=INTEGER},
      graphic = #{record.graphic,jdbcType=INTEGER},
      user = #{record.user,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jd.cardapp.model.Buy" >
    update t_buy
    <set >
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="pay != null" >
        pay = #{pay,jdbcType=DOUBLE},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="pic1 != null" >
        pic1 = #{pic1,jdbcType=VARCHAR},
      </if>
      <if test="pic2 != null" >
        pic2 = #{pic2,jdbcType=VARCHAR},
      </if>
      <if test="folder1 != null" >
        folder1 = #{folder1,jdbcType=VARCHAR},
      </if>
      <if test="folder2 != null" >
        folder2 = #{folder2,jdbcType=VARCHAR},
      </if>
      <if test="card != null" >
        card = #{card,jdbcType=INTEGER},
      </if>
      <if test="graphic != null" >
        graphic = #{graphic,jdbcType=INTEGER},
      </if>
      <if test="user != null" >
        user = #{user,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jd.cardapp.model.Buy" >
    update t_buy
    set state = #{state,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      pay = #{pay,jdbcType=DOUBLE},
      detail = #{detail,jdbcType=VARCHAR},
      pic1 = #{pic1,jdbcType=VARCHAR},
      pic2 = #{pic2,jdbcType=VARCHAR},
      folder1 = #{folder1,jdbcType=VARCHAR},
      folder2 = #{folder2,jdbcType=VARCHAR},
      card = #{card,jdbcType=INTEGER},
      graphic = #{graphic,jdbcType=INTEGER},
      user = #{user,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>