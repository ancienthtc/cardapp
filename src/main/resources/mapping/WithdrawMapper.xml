<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jd.cardapp.dao.WithdrawMapper" >
  <resultMap id="BaseResultMap" type="com.jd.cardapp.model.Withdraw" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="aname" property="aname" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="applytime" property="applytime" jdbcType="TIMESTAMP" />
    <result column="finish" property="finish" jdbcType="TIMESTAMP" />
    <result column="user" property="user" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, state, amount, aname, account, applytime, finish, user
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jd.cardapp.model.WithdrawExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_withdraw
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_withdraw
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_withdraw
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jd.cardapp.model.WithdrawExample" >
    delete from t_withdraw
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jd.cardapp.model.Withdraw" >
    insert into t_withdraw (id, state, amount, 
      aname, account, applytime, 
      finish, user)
    values (#{id,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{amount,jdbcType=DOUBLE}, 
      #{aname,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{applytime,jdbcType=TIMESTAMP}, 
      #{finish,jdbcType=TIMESTAMP}, #{user,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jd.cardapp.model.Withdraw" >
    insert into t_withdraw
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="aname != null" >
        aname,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="applytime != null" >
        applytime,
      </if>
      <if test="finish != null" >
        finish,
      </if>
      <if test="user != null" >
        user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="aname != null" >
        #{aname,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="applytime != null" >
        #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="finish != null" >
        #{finish,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null" >
        #{user,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jd.cardapp.model.WithdrawExample" resultType="java.lang.Integer" >
    select count(*) from t_withdraw
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_withdraw
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.aname != null" >
        aname = #{record.aname,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.applytime != null" >
        applytime = #{record.applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finish != null" >
        finish = #{record.finish,jdbcType=TIMESTAMP},
      </if>
      <if test="record.user != null" >
        user = #{record.user,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_withdraw
    set id = #{record.id,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DOUBLE},
      aname = #{record.aname,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      applytime = #{record.applytime,jdbcType=TIMESTAMP},
      finish = #{record.finish,jdbcType=TIMESTAMP},
      user = #{record.user,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jd.cardapp.model.Withdraw" >
    update t_withdraw
    <set >
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="aname != null" >
        aname = #{aname,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="applytime != null" >
        applytime = #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="finish != null" >
        finish = #{finish,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null" >
        user = #{user,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jd.cardapp.model.Withdraw" >
    update t_withdraw
    set state = #{state,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DOUBLE},
      aname = #{aname,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      applytime = #{applytime,jdbcType=TIMESTAMP},
      finish = #{finish,jdbcType=TIMESTAMP},
      user = #{user,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getWithdrawList" resultType="com.jd.cardapp.model.Withdraw">
    select
    <include refid="Base_Column_List" />
    from t_withdraw
    <trim prefix="where" prefixOverrides="and|or">
      <if test="key!=null">
        (
        <foreach collection="key" item="item" index="index"  separator="OR">
          aname LIKE CONCAT('%',#{item},'%')
          OR account LIKE CONCAT('%',#{item},'%')
        </foreach>
        )
      </if>
      <choose>
        <when test=" (begin!=null and end==null) or (begin!='' and end=='') ">
          AND applytime >= #{begin,jdbcType=VARCHAR}
        </when>
        <when test=" (end!=null and begin==null) or (end!='' and begin=='') ">
          AND #{end,jdbcType=VARCHAR} >= applytime
        </when>
        <when test=" (begin!=null and end!=null) and (begin!='' and end!='') ">
          AND applytime >= #{begin,jdbcType=VARCHAR} AND #{end,jdbcType=VARCHAR} >= applytime
        </when>
      </choose>
    </trim>
    ORDER BY state , applytime
  </select>

</mapper>