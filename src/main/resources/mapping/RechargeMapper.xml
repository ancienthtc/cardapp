<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jd.cardapp.dao.RechargeMapper" >
  <resultMap id="BaseResultMap" type="com.jd.cardapp.model.Recharge" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sequence" property="sequence" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="paytime" property="paytime" jdbcType="TIMESTAMP" />
    <result column="user" property="user" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sequence, state, amount, paytime, user
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jd.cardapp.model.RechargeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_recharge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_recharge
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_recharge
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jd.cardapp.model.RechargeExample" >
    delete from t_recharge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jd.cardapp.model.Recharge" >
    insert into t_recharge (id, sequence, state,
    amount, paytime, user
    )
    values (#{id,jdbcType=INTEGER}, #{sequence,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER},
    #{amount,jdbcType=DOUBLE}, #{paytime,jdbcType=TIMESTAMP}, #{user,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.jd.cardapp.model.Recharge"  useGeneratedKeys="true" keyProperty="id">
    insert into t_recharge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sequence != null" >
        sequence,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="paytime != null" >
        paytime,
      </if>
      <if test="user != null" >
        user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sequence != null" >
        #{sequence,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="paytime != null" >
        #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null" >
        #{user,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jd.cardapp.model.RechargeExample" resultType="java.lang.Integer" >
    select count(*) from t_recharge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_recharge
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sequence != null" >
        sequence = #{record.sequence,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.paytime != null" >
        paytime = #{record.paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.user != null" >
        user = #{record.user,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_recharge
    set id = #{record.id,jdbcType=INTEGER},
    sequence = #{record.sequence,jdbcType=VARCHAR},
    state = #{record.state,jdbcType=INTEGER},
    amount = #{record.amount,jdbcType=DOUBLE},
    paytime = #{record.paytime,jdbcType=TIMESTAMP},
    user = #{record.user,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jd.cardapp.model.Recharge" >
    update t_recharge
    <set >
      <if test="sequence != null" >
        sequence = #{sequence,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="paytime != null" >
        paytime = #{paytime,jdbcType=TIMESTAMP},
      </if>
      <if test="user != null" >
        user = #{user,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jd.cardapp.model.Recharge" >
    update t_recharge
    set sequence = #{sequence,jdbcType=VARCHAR},
    state = #{state,jdbcType=INTEGER},
    amount = #{amount,jdbcType=DOUBLE},
    paytime = #{paytime,jdbcType=TIMESTAMP},
    user = #{user,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 订单更新 -->
  <update id="orderUpdate">
    update t_recharge
    set state = #{status,jdbcType=INTEGER},
    paytime = #{paytime,jdbcType=TIMESTAMP}
    where sequence = #{sequence,jdbcType=VARCHAR}
  </update>

  <select id="selectBySequence" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_recharge
    where sequence = #{sequence,jdbcType=VARCHAR}
  </select>

</mapper>